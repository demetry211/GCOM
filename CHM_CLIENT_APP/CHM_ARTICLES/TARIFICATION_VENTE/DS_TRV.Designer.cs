//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8922
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CHM_CLIENT_APP.CHM_ARTICLES.TARIFICATION_VENTE {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS_TRV")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS_TRV : global::System.Data.DataSet {
        
        private UNITEDataTable tableUNITE;
        
        private ARTICLEDataTable tableARTICLE;
        
        private TRVDataTable tableTRV;
        
        private CLIENTDataTable tableCLIENT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DS_TRV() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DS_TRV(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["UNITE"] != null)) {
                    base.Tables.Add(new UNITEDataTable(ds.Tables["UNITE"]));
                }
                if ((ds.Tables["ARTICLE"] != null)) {
                    base.Tables.Add(new ARTICLEDataTable(ds.Tables["ARTICLE"]));
                }
                if ((ds.Tables["TRV"] != null)) {
                    base.Tables.Add(new TRVDataTable(ds.Tables["TRV"]));
                }
                if ((ds.Tables["CLIENT"] != null)) {
                    base.Tables.Add(new CLIENTDataTable(ds.Tables["CLIENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UNITEDataTable UNITE {
            get {
                return this.tableUNITE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ARTICLEDataTable ARTICLE {
            get {
                return this.tableARTICLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRVDataTable TRV {
            get {
                return this.tableTRV;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CLIENTDataTable CLIENT {
            get {
                return this.tableCLIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DS_TRV cln = ((DS_TRV)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["UNITE"] != null)) {
                    base.Tables.Add(new UNITEDataTable(ds.Tables["UNITE"]));
                }
                if ((ds.Tables["ARTICLE"] != null)) {
                    base.Tables.Add(new ARTICLEDataTable(ds.Tables["ARTICLE"]));
                }
                if ((ds.Tables["TRV"] != null)) {
                    base.Tables.Add(new TRVDataTable(ds.Tables["TRV"]));
                }
                if ((ds.Tables["CLIENT"] != null)) {
                    base.Tables.Add(new CLIENTDataTable(ds.Tables["CLIENT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableUNITE = ((UNITEDataTable)(base.Tables["UNITE"]));
            if ((initTable == true)) {
                if ((this.tableUNITE != null)) {
                    this.tableUNITE.InitVars();
                }
            }
            this.tableARTICLE = ((ARTICLEDataTable)(base.Tables["ARTICLE"]));
            if ((initTable == true)) {
                if ((this.tableARTICLE != null)) {
                    this.tableARTICLE.InitVars();
                }
            }
            this.tableTRV = ((TRVDataTable)(base.Tables["TRV"]));
            if ((initTable == true)) {
                if ((this.tableTRV != null)) {
                    this.tableTRV.InitVars();
                }
            }
            this.tableCLIENT = ((CLIENTDataTable)(base.Tables["CLIENT"]));
            if ((initTable == true)) {
                if ((this.tableCLIENT != null)) {
                    this.tableCLIENT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DS_TRV";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS_TRV.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUNITE = new UNITEDataTable();
            base.Tables.Add(this.tableUNITE);
            this.tableARTICLE = new ARTICLEDataTable();
            base.Tables.Add(this.tableARTICLE);
            this.tableTRV = new TRVDataTable();
            base.Tables.Add(this.tableTRV);
            this.tableCLIENT = new CLIENTDataTable();
            base.Tables.Add(this.tableCLIENT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUNITE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeARTICLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTRV() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCLIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS_TRV ds = new DS_TRV();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void UNITERowChangeEventHandler(object sender, UNITERowChangeEvent e);
        
        public delegate void ARTICLERowChangeEventHandler(object sender, ARTICLERowChangeEvent e);
        
        public delegate void TRVRowChangeEventHandler(object sender, TRVRowChangeEvent e);
        
        public delegate void CLIENTRowChangeEventHandler(object sender, CLIENTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UNITEDataTable : global::System.Data.TypedTableBase<UNITERow> {
            
            private global::System.Data.DataColumn columnCODE_UNITE;
            
            private global::System.Data.DataColumn columnLIB_UNITE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITEDataTable() {
                this.TableName = "UNITE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNITEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UNITEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_UNITEColumn {
                get {
                    return this.columnCODE_UNITE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIB_UNITEColumn {
                get {
                    return this.columnLIB_UNITE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITERow this[int index] {
                get {
                    return ((UNITERow)(this.Rows[index]));
                }
            }
            
            public event UNITERowChangeEventHandler UNITERowChanging;
            
            public event UNITERowChangeEventHandler UNITERowChanged;
            
            public event UNITERowChangeEventHandler UNITERowDeleting;
            
            public event UNITERowChangeEventHandler UNITERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUNITERow(UNITERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITERow AddUNITERow(decimal CODE_UNITE, string LIB_UNITE) {
                UNITERow rowUNITERow = ((UNITERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODE_UNITE,
                        LIB_UNITE};
                rowUNITERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUNITERow);
                return rowUNITERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITERow FindByCODE_UNITE(decimal CODE_UNITE) {
                return ((UNITERow)(this.Rows.Find(new object[] {
                            CODE_UNITE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UNITEDataTable cln = ((UNITEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UNITEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODE_UNITE = base.Columns["CODE_UNITE"];
                this.columnLIB_UNITE = base.Columns["LIB_UNITE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODE_UNITE = new global::System.Data.DataColumn("CODE_UNITE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_UNITE);
                this.columnLIB_UNITE = new global::System.Data.DataColumn("LIB_UNITE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIB_UNITE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODE_UNITE}, true));
                this.columnCODE_UNITE.AllowDBNull = false;
                this.columnCODE_UNITE.ReadOnly = true;
                this.columnCODE_UNITE.Unique = true;
                this.columnCODE_UNITE.Caption = "Code";
                this.columnLIB_UNITE.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITERow NewUNITERow() {
                return ((UNITERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UNITERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UNITERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UNITERowChanged != null)) {
                    this.UNITERowChanged(this, new UNITERowChangeEvent(((UNITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UNITERowChanging != null)) {
                    this.UNITERowChanging(this, new UNITERowChangeEvent(((UNITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UNITERowDeleted != null)) {
                    this.UNITERowDeleted(this, new UNITERowChangeEvent(((UNITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UNITERowDeleting != null)) {
                    this.UNITERowDeleting(this, new UNITERowChangeEvent(((UNITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUNITERow(UNITERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TRV ds = new DS_TRV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UNITEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ARTICLEDataTable : global::System.Data.TypedTableBase<ARTICLERow> {
            
            private global::System.Data.DataColumn columnCODE_ARTICLE;
            
            private global::System.Data.DataColumn columnREF_ARTICLE;
            
            private global::System.Data.DataColumn columnDESIGNATION_ARTICLE;
            
            private global::System.Data.DataColumn columnCODE_MARQUE;
            
            private global::System.Data.DataColumn columnDESCRIPTION_ARTICLE;
            
            private global::System.Data.DataColumn columnCODE_BARRE_ARTICLE;
            
            private global::System.Data.DataColumn columnQTE_ARTICLE;
            
            private global::System.Data.DataColumn columnCODE_UNITE;
            
            private global::System.Data.DataColumn columnQTE_MIN_ARTICLE;
            
            private global::System.Data.DataColumn columnPHOTO_ARTICLE;
            
            private global::System.Data.DataColumn columnPRIX_HT_A_ARTICLE;
            
            private global::System.Data.DataColumn columnTAUX_MAJORATION;
            
            private global::System.Data.DataColumn columnCODE_TVA;
            
            private global::System.Data.DataColumn columnETAT_ARTICLE;
            
            private global::System.Data.DataColumn columnCODE_FAMILLE;
            
            private global::System.Data.DataColumn columnCODE_CATEG;
            
            private global::System.Data.DataColumn columnCODE_MAG;
            
            private global::System.Data.DataColumn columnCODE_FOURNISSEUR;
            
            private global::System.Data.DataColumn columnMAX_REMISE;
            
            private global::System.Data.DataColumn columnPRIX_SOLDE;
            
            private global::System.Data.DataColumn columnCODE_BARRE_ARTICLE_SOLDE;
            
            private global::System.Data.DataColumn columnPRIX_HT_V_ARTICLE;
            
            private global::System.Data.DataColumn columnREF_FAMILLE;
            
            private global::System.Data.DataColumn columnDESIGNATION_FAMILLE;
            
            private global::System.Data.DataColumn columnDESCRIPTION_FAMILLE;
            
            private global::System.Data.DataColumn columnLIB_CATEG;
            
            private global::System.Data.DataColumn columnDESCRIPTION_CATEG;
            
            private global::System.Data.DataColumn columnREF_MARQUE;
            
            private global::System.Data.DataColumn columnDESIGNATION_MARQUE;
            
            private global::System.Data.DataColumn columnDESCRIPTION_MARQUE;
            
            private global::System.Data.DataColumn columnLIB_UNITE;
            
            private global::System.Data.DataColumn columnREF_FOURNISSEUR;
            
            private global::System.Data.DataColumn columnRS_FOURNISSEUR;
            
            private global::System.Data.DataColumn columnADRESSE_FOURNISSEUR;
            
            private global::System.Data.DataColumn columnTEL_FOURNISSEUR;
            
            private global::System.Data.DataColumn columnTAUX_TVA;
            
            private global::System.Data.DataColumn columnNOM_MAG;
            
            private global::System.Data.DataColumn columnADRESSE_MAG;
            
            private global::System.Data.DataColumn columnTEL_MAG;
            
            private global::System.Data.DataColumn columnREF_FRN;
            
            private global::System.Data.DataColumn columnSTOCKABLE;
            
            private global::System.Data.DataColumn columnPRIX_FIXE;
            
            private global::System.Data.DataColumn columnPRIX_TTC;
            
            private global::System.Data.DataColumn columnTVA_ACHAT;
            
            private global::System.Data.DataColumn columnTAUX_TVA_ACHAT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTICLEDataTable() {
                this.TableName = "ARTICLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ARTICLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ARTICLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_ARTICLEColumn {
                get {
                    return this.columnCODE_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_ARTICLEColumn {
                get {
                    return this.columnREF_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESIGNATION_ARTICLEColumn {
                get {
                    return this.columnDESIGNATION_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_MARQUEColumn {
                get {
                    return this.columnCODE_MARQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTION_ARTICLEColumn {
                get {
                    return this.columnDESCRIPTION_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_BARRE_ARTICLEColumn {
                get {
                    return this.columnCODE_BARRE_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTE_ARTICLEColumn {
                get {
                    return this.columnQTE_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_UNITEColumn {
                get {
                    return this.columnCODE_UNITE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTE_MIN_ARTICLEColumn {
                get {
                    return this.columnQTE_MIN_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHOTO_ARTICLEColumn {
                get {
                    return this.columnPHOTO_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIX_HT_A_ARTICLEColumn {
                get {
                    return this.columnPRIX_HT_A_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAUX_MAJORATIONColumn {
                get {
                    return this.columnTAUX_MAJORATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_TVAColumn {
                get {
                    return this.columnCODE_TVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETAT_ARTICLEColumn {
                get {
                    return this.columnETAT_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_FAMILLEColumn {
                get {
                    return this.columnCODE_FAMILLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_CATEGColumn {
                get {
                    return this.columnCODE_CATEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_MAGColumn {
                get {
                    return this.columnCODE_MAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_FOURNISSEURColumn {
                get {
                    return this.columnCODE_FOURNISSEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAX_REMISEColumn {
                get {
                    return this.columnMAX_REMISE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIX_SOLDEColumn {
                get {
                    return this.columnPRIX_SOLDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_BARRE_ARTICLE_SOLDEColumn {
                get {
                    return this.columnCODE_BARRE_ARTICLE_SOLDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIX_HT_V_ARTICLEColumn {
                get {
                    return this.columnPRIX_HT_V_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_FAMILLEColumn {
                get {
                    return this.columnREF_FAMILLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESIGNATION_FAMILLEColumn {
                get {
                    return this.columnDESIGNATION_FAMILLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTION_FAMILLEColumn {
                get {
                    return this.columnDESCRIPTION_FAMILLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIB_CATEGColumn {
                get {
                    return this.columnLIB_CATEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTION_CATEGColumn {
                get {
                    return this.columnDESCRIPTION_CATEG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_MARQUEColumn {
                get {
                    return this.columnREF_MARQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESIGNATION_MARQUEColumn {
                get {
                    return this.columnDESIGNATION_MARQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESCRIPTION_MARQUEColumn {
                get {
                    return this.columnDESCRIPTION_MARQUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIB_UNITEColumn {
                get {
                    return this.columnLIB_UNITE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_FOURNISSEURColumn {
                get {
                    return this.columnREF_FOURNISSEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RS_FOURNISSEURColumn {
                get {
                    return this.columnRS_FOURNISSEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADRESSE_FOURNISSEURColumn {
                get {
                    return this.columnADRESSE_FOURNISSEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEL_FOURNISSEURColumn {
                get {
                    return this.columnTEL_FOURNISSEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAUX_TVAColumn {
                get {
                    return this.columnTAUX_TVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOM_MAGColumn {
                get {
                    return this.columnNOM_MAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADRESSE_MAGColumn {
                get {
                    return this.columnADRESSE_MAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEL_MAGColumn {
                get {
                    return this.columnTEL_MAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_FRNColumn {
                get {
                    return this.columnREF_FRN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCKABLEColumn {
                get {
                    return this.columnSTOCKABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIX_FIXEColumn {
                get {
                    return this.columnPRIX_FIXE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRIX_TTCColumn {
                get {
                    return this.columnPRIX_TTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TVA_ACHATColumn {
                get {
                    return this.columnTVA_ACHAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAUX_TVA_ACHATColumn {
                get {
                    return this.columnTAUX_TVA_ACHAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTICLERow this[int index] {
                get {
                    return ((ARTICLERow)(this.Rows[index]));
                }
            }
            
            public event ARTICLERowChangeEventHandler ARTICLERowChanging;
            
            public event ARTICLERowChangeEventHandler ARTICLERowChanged;
            
            public event ARTICLERowChangeEventHandler ARTICLERowDeleting;
            
            public event ARTICLERowChangeEventHandler ARTICLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddARTICLERow(ARTICLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTICLERow AddARTICLERow(
                        decimal CODE_ARTICLE, 
                        string REF_ARTICLE, 
                        string DESIGNATION_ARTICLE, 
                        decimal CODE_MARQUE, 
                        string DESCRIPTION_ARTICLE, 
                        string CODE_BARRE_ARTICLE, 
                        decimal QTE_ARTICLE, 
                        decimal CODE_UNITE, 
                        decimal QTE_MIN_ARTICLE, 
                        byte[] PHOTO_ARTICLE, 
                        decimal PRIX_HT_A_ARTICLE, 
                        decimal TAUX_MAJORATION, 
                        decimal CODE_TVA, 
                        bool ETAT_ARTICLE, 
                        decimal CODE_FAMILLE, 
                        decimal CODE_CATEG, 
                        decimal CODE_MAG, 
                        decimal CODE_FOURNISSEUR, 
                        decimal MAX_REMISE, 
                        decimal PRIX_SOLDE, 
                        string CODE_BARRE_ARTICLE_SOLDE, 
                        decimal PRIX_HT_V_ARTICLE, 
                        string REF_FAMILLE, 
                        string DESIGNATION_FAMILLE, 
                        string DESCRIPTION_FAMILLE, 
                        string LIB_CATEG, 
                        string DESCRIPTION_CATEG, 
                        string REF_MARQUE, 
                        string DESIGNATION_MARQUE, 
                        string DESCRIPTION_MARQUE, 
                        string LIB_UNITE, 
                        string REF_FOURNISSEUR, 
                        string RS_FOURNISSEUR, 
                        string ADRESSE_FOURNISSEUR, 
                        string TEL_FOURNISSEUR, 
                        decimal TAUX_TVA, 
                        string NOM_MAG, 
                        string ADRESSE_MAG, 
                        string TEL_MAG, 
                        string REF_FRN, 
                        bool STOCKABLE, 
                        bool PRIX_FIXE, 
                        decimal PRIX_TTC, 
                        decimal TVA_ACHAT, 
                        decimal TAUX_TVA_ACHAT) {
                ARTICLERow rowARTICLERow = ((ARTICLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODE_ARTICLE,
                        REF_ARTICLE,
                        DESIGNATION_ARTICLE,
                        CODE_MARQUE,
                        DESCRIPTION_ARTICLE,
                        CODE_BARRE_ARTICLE,
                        QTE_ARTICLE,
                        CODE_UNITE,
                        QTE_MIN_ARTICLE,
                        PHOTO_ARTICLE,
                        PRIX_HT_A_ARTICLE,
                        TAUX_MAJORATION,
                        CODE_TVA,
                        ETAT_ARTICLE,
                        CODE_FAMILLE,
                        CODE_CATEG,
                        CODE_MAG,
                        CODE_FOURNISSEUR,
                        MAX_REMISE,
                        PRIX_SOLDE,
                        CODE_BARRE_ARTICLE_SOLDE,
                        PRIX_HT_V_ARTICLE,
                        REF_FAMILLE,
                        DESIGNATION_FAMILLE,
                        DESCRIPTION_FAMILLE,
                        LIB_CATEG,
                        DESCRIPTION_CATEG,
                        REF_MARQUE,
                        DESIGNATION_MARQUE,
                        DESCRIPTION_MARQUE,
                        LIB_UNITE,
                        REF_FOURNISSEUR,
                        RS_FOURNISSEUR,
                        ADRESSE_FOURNISSEUR,
                        TEL_FOURNISSEUR,
                        TAUX_TVA,
                        NOM_MAG,
                        ADRESSE_MAG,
                        TEL_MAG,
                        REF_FRN,
                        STOCKABLE,
                        PRIX_FIXE,
                        PRIX_TTC,
                        TVA_ACHAT,
                        TAUX_TVA_ACHAT};
                rowARTICLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowARTICLERow);
                return rowARTICLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTICLERow FindByCODE_ARTICLE(decimal CODE_ARTICLE) {
                return ((ARTICLERow)(this.Rows.Find(new object[] {
                            CODE_ARTICLE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ARTICLEDataTable cln = ((ARTICLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ARTICLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODE_ARTICLE = base.Columns["CODE_ARTICLE"];
                this.columnREF_ARTICLE = base.Columns["REF_ARTICLE"];
                this.columnDESIGNATION_ARTICLE = base.Columns["DESIGNATION_ARTICLE"];
                this.columnCODE_MARQUE = base.Columns["CODE_MARQUE"];
                this.columnDESCRIPTION_ARTICLE = base.Columns["DESCRIPTION_ARTICLE"];
                this.columnCODE_BARRE_ARTICLE = base.Columns["CODE_BARRE_ARTICLE"];
                this.columnQTE_ARTICLE = base.Columns["QTE_ARTICLE"];
                this.columnCODE_UNITE = base.Columns["CODE_UNITE"];
                this.columnQTE_MIN_ARTICLE = base.Columns["QTE_MIN_ARTICLE"];
                this.columnPHOTO_ARTICLE = base.Columns["PHOTO_ARTICLE"];
                this.columnPRIX_HT_A_ARTICLE = base.Columns["PRIX_HT_A_ARTICLE"];
                this.columnTAUX_MAJORATION = base.Columns["TAUX_MAJORATION"];
                this.columnCODE_TVA = base.Columns["CODE_TVA"];
                this.columnETAT_ARTICLE = base.Columns["ETAT_ARTICLE"];
                this.columnCODE_FAMILLE = base.Columns["CODE_FAMILLE"];
                this.columnCODE_CATEG = base.Columns["CODE_CATEG"];
                this.columnCODE_MAG = base.Columns["CODE_MAG"];
                this.columnCODE_FOURNISSEUR = base.Columns["CODE_FOURNISSEUR"];
                this.columnMAX_REMISE = base.Columns["MAX_REMISE"];
                this.columnPRIX_SOLDE = base.Columns["PRIX_SOLDE"];
                this.columnCODE_BARRE_ARTICLE_SOLDE = base.Columns["CODE_BARRE_ARTICLE_SOLDE"];
                this.columnPRIX_HT_V_ARTICLE = base.Columns["PRIX_HT_V_ARTICLE"];
                this.columnREF_FAMILLE = base.Columns["REF_FAMILLE"];
                this.columnDESIGNATION_FAMILLE = base.Columns["DESIGNATION_FAMILLE"];
                this.columnDESCRIPTION_FAMILLE = base.Columns["DESCRIPTION_FAMILLE"];
                this.columnLIB_CATEG = base.Columns["LIB_CATEG"];
                this.columnDESCRIPTION_CATEG = base.Columns["DESCRIPTION_CATEG"];
                this.columnREF_MARQUE = base.Columns["REF_MARQUE"];
                this.columnDESIGNATION_MARQUE = base.Columns["DESIGNATION_MARQUE"];
                this.columnDESCRIPTION_MARQUE = base.Columns["DESCRIPTION_MARQUE"];
                this.columnLIB_UNITE = base.Columns["LIB_UNITE"];
                this.columnREF_FOURNISSEUR = base.Columns["REF_FOURNISSEUR"];
                this.columnRS_FOURNISSEUR = base.Columns["RS_FOURNISSEUR"];
                this.columnADRESSE_FOURNISSEUR = base.Columns["ADRESSE_FOURNISSEUR"];
                this.columnTEL_FOURNISSEUR = base.Columns["TEL_FOURNISSEUR"];
                this.columnTAUX_TVA = base.Columns["TAUX_TVA"];
                this.columnNOM_MAG = base.Columns["NOM_MAG"];
                this.columnADRESSE_MAG = base.Columns["ADRESSE_MAG"];
                this.columnTEL_MAG = base.Columns["TEL_MAG"];
                this.columnREF_FRN = base.Columns["REF_FRN"];
                this.columnSTOCKABLE = base.Columns["STOCKABLE"];
                this.columnPRIX_FIXE = base.Columns["PRIX_FIXE"];
                this.columnPRIX_TTC = base.Columns["PRIX_TTC"];
                this.columnTVA_ACHAT = base.Columns["TVA_ACHAT"];
                this.columnTAUX_TVA_ACHAT = base.Columns["TAUX_TVA_ACHAT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODE_ARTICLE = new global::System.Data.DataColumn("CODE_ARTICLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_ARTICLE);
                this.columnREF_ARTICLE = new global::System.Data.DataColumn("REF_ARTICLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_ARTICLE);
                this.columnDESIGNATION_ARTICLE = new global::System.Data.DataColumn("DESIGNATION_ARTICLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESIGNATION_ARTICLE);
                this.columnCODE_MARQUE = new global::System.Data.DataColumn("CODE_MARQUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_MARQUE);
                this.columnDESCRIPTION_ARTICLE = new global::System.Data.DataColumn("DESCRIPTION_ARTICLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION_ARTICLE);
                this.columnCODE_BARRE_ARTICLE = new global::System.Data.DataColumn("CODE_BARRE_ARTICLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_BARRE_ARTICLE);
                this.columnQTE_ARTICLE = new global::System.Data.DataColumn("QTE_ARTICLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTE_ARTICLE);
                this.columnCODE_UNITE = new global::System.Data.DataColumn("CODE_UNITE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_UNITE);
                this.columnQTE_MIN_ARTICLE = new global::System.Data.DataColumn("QTE_MIN_ARTICLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTE_MIN_ARTICLE);
                this.columnPHOTO_ARTICLE = new global::System.Data.DataColumn("PHOTO_ARTICLE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHOTO_ARTICLE);
                this.columnPRIX_HT_A_ARTICLE = new global::System.Data.DataColumn("PRIX_HT_A_ARTICLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIX_HT_A_ARTICLE);
                this.columnTAUX_MAJORATION = new global::System.Data.DataColumn("TAUX_MAJORATION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAUX_MAJORATION);
                this.columnCODE_TVA = new global::System.Data.DataColumn("CODE_TVA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_TVA);
                this.columnETAT_ARTICLE = new global::System.Data.DataColumn("ETAT_ARTICLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETAT_ARTICLE);
                this.columnCODE_FAMILLE = new global::System.Data.DataColumn("CODE_FAMILLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_FAMILLE);
                this.columnCODE_CATEG = new global::System.Data.DataColumn("CODE_CATEG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_CATEG);
                this.columnCODE_MAG = new global::System.Data.DataColumn("CODE_MAG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_MAG);
                this.columnCODE_FOURNISSEUR = new global::System.Data.DataColumn("CODE_FOURNISSEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_FOURNISSEUR);
                this.columnMAX_REMISE = new global::System.Data.DataColumn("MAX_REMISE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_REMISE);
                this.columnPRIX_SOLDE = new global::System.Data.DataColumn("PRIX_SOLDE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIX_SOLDE);
                this.columnCODE_BARRE_ARTICLE_SOLDE = new global::System.Data.DataColumn("CODE_BARRE_ARTICLE_SOLDE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_BARRE_ARTICLE_SOLDE);
                this.columnPRIX_HT_V_ARTICLE = new global::System.Data.DataColumn("PRIX_HT_V_ARTICLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIX_HT_V_ARTICLE);
                this.columnREF_FAMILLE = new global::System.Data.DataColumn("REF_FAMILLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_FAMILLE);
                this.columnDESIGNATION_FAMILLE = new global::System.Data.DataColumn("DESIGNATION_FAMILLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESIGNATION_FAMILLE);
                this.columnDESCRIPTION_FAMILLE = new global::System.Data.DataColumn("DESCRIPTION_FAMILLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION_FAMILLE);
                this.columnLIB_CATEG = new global::System.Data.DataColumn("LIB_CATEG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIB_CATEG);
                this.columnDESCRIPTION_CATEG = new global::System.Data.DataColumn("DESCRIPTION_CATEG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION_CATEG);
                this.columnREF_MARQUE = new global::System.Data.DataColumn("REF_MARQUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_MARQUE);
                this.columnDESIGNATION_MARQUE = new global::System.Data.DataColumn("DESIGNATION_MARQUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESIGNATION_MARQUE);
                this.columnDESCRIPTION_MARQUE = new global::System.Data.DataColumn("DESCRIPTION_MARQUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION_MARQUE);
                this.columnLIB_UNITE = new global::System.Data.DataColumn("LIB_UNITE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIB_UNITE);
                this.columnREF_FOURNISSEUR = new global::System.Data.DataColumn("REF_FOURNISSEUR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_FOURNISSEUR);
                this.columnRS_FOURNISSEUR = new global::System.Data.DataColumn("RS_FOURNISSEUR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRS_FOURNISSEUR);
                this.columnADRESSE_FOURNISSEUR = new global::System.Data.DataColumn("ADRESSE_FOURNISSEUR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADRESSE_FOURNISSEUR);
                this.columnTEL_FOURNISSEUR = new global::System.Data.DataColumn("TEL_FOURNISSEUR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_FOURNISSEUR);
                this.columnTAUX_TVA = new global::System.Data.DataColumn("TAUX_TVA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAUX_TVA);
                this.columnNOM_MAG = new global::System.Data.DataColumn("NOM_MAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOM_MAG);
                this.columnADRESSE_MAG = new global::System.Data.DataColumn("ADRESSE_MAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADRESSE_MAG);
                this.columnTEL_MAG = new global::System.Data.DataColumn("TEL_MAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_MAG);
                this.columnREF_FRN = new global::System.Data.DataColumn("REF_FRN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_FRN);
                this.columnSTOCKABLE = new global::System.Data.DataColumn("STOCKABLE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCKABLE);
                this.columnPRIX_FIXE = new global::System.Data.DataColumn("PRIX_FIXE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIX_FIXE);
                this.columnPRIX_TTC = new global::System.Data.DataColumn("PRIX_TTC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIX_TTC);
                this.columnTVA_ACHAT = new global::System.Data.DataColumn("TVA_ACHAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTVA_ACHAT);
                this.columnTAUX_TVA_ACHAT = new global::System.Data.DataColumn("TAUX_TVA_ACHAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAUX_TVA_ACHAT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCODE_ARTICLE}, true));
                this.columnCODE_ARTICLE.AllowDBNull = false;
                this.columnCODE_ARTICLE.Unique = true;
                this.columnCODE_ARTICLE.Caption = "Code";
                this.columnREF_ARTICLE.Caption = "Réf.";
                this.columnDESIGNATION_ARTICLE.Caption = "Désignation";
                this.columnCODE_MARQUE.Caption = "Code Marque";
                this.columnDESCRIPTION_ARTICLE.Caption = "Description Article";
                this.columnDESCRIPTION_ARTICLE.DefaultValue = ((string)(""));
                this.columnCODE_BARRE_ARTICLE.Caption = "Code à barre";
                this.columnCODE_BARRE_ARTICLE.DefaultValue = ((string)(""));
                this.columnQTE_ARTICLE.Caption = "Qté";
                this.columnQTE_ARTICLE.DefaultValue = ((decimal)(0m));
                this.columnCODE_UNITE.Caption = "Code Unité";
                this.columnQTE_MIN_ARTICLE.Caption = "Qté Minimale";
                this.columnQTE_MIN_ARTICLE.DefaultValue = ((decimal)(0m));
                this.columnPHOTO_ARTICLE.Caption = "Photo";
                this.columnPRIX_HT_A_ARTICLE.Caption = "Prix HT Achat";
                this.columnPRIX_HT_A_ARTICLE.DefaultValue = ((decimal)(0m));
                this.columnTAUX_MAJORATION.Caption = "% Majoration";
                this.columnTAUX_MAJORATION.DefaultValue = ((decimal)(0m));
                this.columnCODE_TVA.Caption = "Code TVA Vente";
                this.columnETAT_ARTICLE.Caption = "Bloqué";
                this.columnETAT_ARTICLE.DefaultValue = ((bool)(false));
                this.columnCODE_FAMILLE.Caption = "Code Famille";
                this.columnCODE_CATEG.Caption = "Code Catégorie";
                this.columnCODE_MAG.Caption = "Code Magasin";
                this.columnCODE_FOURNISSEUR.Caption = "Code Fournisseur";
                this.columnMAX_REMISE.Caption = "% Max Remise";
                this.columnMAX_REMISE.DefaultValue = ((decimal)(0m));
                this.columnPRIX_SOLDE.Caption = "Prix Solde";
                this.columnPRIX_SOLDE.DefaultValue = ((decimal)(0m));
                this.columnCODE_BARRE_ARTICLE_SOLDE.Caption = "Code à barre Solde";
                this.columnCODE_BARRE_ARTICLE_SOLDE.DefaultValue = ((string)(""));
                this.columnPRIX_HT_V_ARTICLE.Caption = "Prix HT Vente";
                this.columnPRIX_HT_V_ARTICLE.DefaultValue = ((decimal)(0m));
                this.columnREF_FAMILLE.Caption = "Réf Famille";
                this.columnDESIGNATION_FAMILLE.Caption = "Famille";
                this.columnDESCRIPTION_FAMILLE.Caption = "Desc. Famille";
                this.columnLIB_CATEG.Caption = "Catégorie";
                this.columnDESCRIPTION_CATEG.Caption = "Desc. Categorie";
                this.columnREF_MARQUE.Caption = "Ref. Marque";
                this.columnDESIGNATION_MARQUE.Caption = "Marque";
                this.columnDESCRIPTION_MARQUE.Caption = "Desc. Marque";
                this.columnLIB_UNITE.Caption = "Unité";
                this.columnREF_FOURNISSEUR.Caption = "Réf. Fournisseur";
                this.columnRS_FOURNISSEUR.Caption = "Fournisseur";
                this.columnADRESSE_FOURNISSEUR.Caption = "Adresse Fournisseur";
                this.columnTEL_FOURNISSEUR.Caption = "Tel Fournisseur";
                this.columnTAUX_TVA.Caption = "Taux Tva Vente";
                this.columnNOM_MAG.Caption = "Magasin Par Défaut";
                this.columnADRESSE_MAG.Caption = "Adresse Magasin";
                this.columnTEL_MAG.Caption = "Tel Magasin";
                this.columnREF_FRN.Caption = "Reférence Fournisseur";
                this.columnREF_FRN.MaxLength = 30;
                this.columnSTOCKABLE.Caption = "Stockable";
                this.columnPRIX_FIXE.Caption = "Prix Fixe";
                this.columnPRIX_TTC.Caption = "Prix TTC";
                this.columnTVA_ACHAT.Caption = "Code Tva Achat";
                this.columnTAUX_TVA_ACHAT.Caption = "Taux Tva Achat";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTICLERow NewARTICLERow() {
                return ((ARTICLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ARTICLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ARTICLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ARTICLERowChanged != null)) {
                    this.ARTICLERowChanged(this, new ARTICLERowChangeEvent(((ARTICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ARTICLERowChanging != null)) {
                    this.ARTICLERowChanging(this, new ARTICLERowChangeEvent(((ARTICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ARTICLERowDeleted != null)) {
                    this.ARTICLERowDeleted(this, new ARTICLERowChangeEvent(((ARTICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ARTICLERowDeleting != null)) {
                    this.ARTICLERowDeleting(this, new ARTICLERowChangeEvent(((ARTICLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveARTICLERow(ARTICLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TRV ds = new DS_TRV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ARTICLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRVDataTable : global::System.Data.TypedTableBase<TRVRow> {
            
            private global::System.Data.DataColumn columnTRV_ID;
            
            private global::System.Data.DataColumn columnTRV_LIBELLE;
            
            private global::System.Data.DataColumn columnTRV_CODE_ARTICLE;
            
            private global::System.Data.DataColumn columnTRV_CODE_CLIENT;
            
            private global::System.Data.DataColumn columnTRV_CODE_UNITE;
            
            private global::System.Data.DataColumn columnTRV_PRIX_HT;
            
            private global::System.Data.DataColumn columnTRV_TX_REMISE;
            
            private global::System.Data.DataColumn columnTRV_DEBUT_VALID;
            
            private global::System.Data.DataColumn columnTRV_FIN_VALID;
            
            private global::System.Data.DataColumn columnTRV_DATE_CREATION;
            
            private global::System.Data.DataColumn columnTRV_CREATEUR;
            
            private global::System.Data.DataColumn columnTRV_DATE_MODIF;
            
            private global::System.Data.DataColumn columnTRV_MODIFICATEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRVDataTable() {
                this.TableName = "TRV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRVDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TRVDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_IDColumn {
                get {
                    return this.columnTRV_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_LIBELLEColumn {
                get {
                    return this.columnTRV_LIBELLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_CODE_ARTICLEColumn {
                get {
                    return this.columnTRV_CODE_ARTICLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_CODE_CLIENTColumn {
                get {
                    return this.columnTRV_CODE_CLIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_CODE_UNITEColumn {
                get {
                    return this.columnTRV_CODE_UNITE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_PRIX_HTColumn {
                get {
                    return this.columnTRV_PRIX_HT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_TX_REMISEColumn {
                get {
                    return this.columnTRV_TX_REMISE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_DEBUT_VALIDColumn {
                get {
                    return this.columnTRV_DEBUT_VALID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_FIN_VALIDColumn {
                get {
                    return this.columnTRV_FIN_VALID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_DATE_CREATIONColumn {
                get {
                    return this.columnTRV_DATE_CREATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_CREATEURColumn {
                get {
                    return this.columnTRV_CREATEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_DATE_MODIFColumn {
                get {
                    return this.columnTRV_DATE_MODIF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRV_MODIFICATEURColumn {
                get {
                    return this.columnTRV_MODIFICATEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRVRow this[int index] {
                get {
                    return ((TRVRow)(this.Rows[index]));
                }
            }
            
            public event TRVRowChangeEventHandler TRVRowChanging;
            
            public event TRVRowChangeEventHandler TRVRowChanged;
            
            public event TRVRowChangeEventHandler TRVRowDeleting;
            
            public event TRVRowChangeEventHandler TRVRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTRVRow(TRVRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRVRow AddTRVRow(decimal TRV_ID, string TRV_LIBELLE, decimal TRV_CODE_ARTICLE, decimal TRV_CODE_CLIENT, decimal TRV_CODE_UNITE, decimal TRV_PRIX_HT, decimal TRV_TX_REMISE, System.DateTime TRV_DEBUT_VALID, System.DateTime TRV_FIN_VALID, System.DateTime TRV_DATE_CREATION, decimal TRV_CREATEUR, System.DateTime TRV_DATE_MODIF, decimal TRV_MODIFICATEUR) {
                TRVRow rowTRVRow = ((TRVRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TRV_ID,
                        TRV_LIBELLE,
                        TRV_CODE_ARTICLE,
                        TRV_CODE_CLIENT,
                        TRV_CODE_UNITE,
                        TRV_PRIX_HT,
                        TRV_TX_REMISE,
                        TRV_DEBUT_VALID,
                        TRV_FIN_VALID,
                        TRV_DATE_CREATION,
                        TRV_CREATEUR,
                        TRV_DATE_MODIF,
                        TRV_MODIFICATEUR};
                rowTRVRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRVRow);
                return rowTRVRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRVRow FindByTRV_ID(decimal TRV_ID) {
                return ((TRVRow)(this.Rows.Find(new object[] {
                            TRV_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TRVDataTable cln = ((TRVDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRVDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTRV_ID = base.Columns["TRV_ID"];
                this.columnTRV_LIBELLE = base.Columns["TRV_LIBELLE"];
                this.columnTRV_CODE_ARTICLE = base.Columns["TRV_CODE_ARTICLE"];
                this.columnTRV_CODE_CLIENT = base.Columns["TRV_CODE_CLIENT"];
                this.columnTRV_CODE_UNITE = base.Columns["TRV_CODE_UNITE"];
                this.columnTRV_PRIX_HT = base.Columns["TRV_PRIX_HT"];
                this.columnTRV_TX_REMISE = base.Columns["TRV_TX_REMISE"];
                this.columnTRV_DEBUT_VALID = base.Columns["TRV_DEBUT_VALID"];
                this.columnTRV_FIN_VALID = base.Columns["TRV_FIN_VALID"];
                this.columnTRV_DATE_CREATION = base.Columns["TRV_DATE_CREATION"];
                this.columnTRV_CREATEUR = base.Columns["TRV_CREATEUR"];
                this.columnTRV_DATE_MODIF = base.Columns["TRV_DATE_MODIF"];
                this.columnTRV_MODIFICATEUR = base.Columns["TRV_MODIFICATEUR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTRV_ID = new global::System.Data.DataColumn("TRV_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_ID);
                this.columnTRV_LIBELLE = new global::System.Data.DataColumn("TRV_LIBELLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_LIBELLE);
                this.columnTRV_CODE_ARTICLE = new global::System.Data.DataColumn("TRV_CODE_ARTICLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_CODE_ARTICLE);
                this.columnTRV_CODE_CLIENT = new global::System.Data.DataColumn("TRV_CODE_CLIENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_CODE_CLIENT);
                this.columnTRV_CODE_UNITE = new global::System.Data.DataColumn("TRV_CODE_UNITE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_CODE_UNITE);
                this.columnTRV_PRIX_HT = new global::System.Data.DataColumn("TRV_PRIX_HT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_PRIX_HT);
                this.columnTRV_TX_REMISE = new global::System.Data.DataColumn("TRV_TX_REMISE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_TX_REMISE);
                this.columnTRV_DEBUT_VALID = new global::System.Data.DataColumn("TRV_DEBUT_VALID", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_DEBUT_VALID);
                this.columnTRV_FIN_VALID = new global::System.Data.DataColumn("TRV_FIN_VALID", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_FIN_VALID);
                this.columnTRV_DATE_CREATION = new global::System.Data.DataColumn("TRV_DATE_CREATION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_DATE_CREATION);
                this.columnTRV_CREATEUR = new global::System.Data.DataColumn("TRV_CREATEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_CREATEUR);
                this.columnTRV_DATE_MODIF = new global::System.Data.DataColumn("TRV_DATE_MODIF", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_DATE_MODIF);
                this.columnTRV_MODIFICATEUR = new global::System.Data.DataColumn("TRV_MODIFICATEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRV_MODIFICATEUR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("TRVKey1", new global::System.Data.DataColumn[] {
                                this.columnTRV_ID}, true));
                this.columnTRV_ID.AllowDBNull = false;
                this.columnTRV_ID.Unique = true;
                this.columnTRV_ID.Caption = "Id";
                this.columnTRV_LIBELLE.Caption = "Libellé Tarif";
                this.columnTRV_CODE_ARTICLE.Caption = "Article";
                this.columnTRV_CODE_CLIENT.Caption = "Client";
                this.columnTRV_CODE_UNITE.Caption = "Unité";
                this.columnTRV_PRIX_HT.Caption = "Prix HT";
                this.columnTRV_TX_REMISE.Caption = "% Remise";
                this.columnTRV_DEBUT_VALID.Caption = "Debut validité";
                this.columnTRV_FIN_VALID.Caption = "Fin validité";
                this.columnTRV_DATE_CREATION.Caption = "Date Création";
                this.columnTRV_CREATEUR.Caption = "Créateur";
                this.columnTRV_DATE_MODIF.Caption = "Date Modification";
                this.columnTRV_MODIFICATEUR.Caption = "Modificateur";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRVRow NewTRVRow() {
                return ((TRVRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRVRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TRVRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRVRowChanged != null)) {
                    this.TRVRowChanged(this, new TRVRowChangeEvent(((TRVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRVRowChanging != null)) {
                    this.TRVRowChanging(this, new TRVRowChangeEvent(((TRVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRVRowDeleted != null)) {
                    this.TRVRowDeleted(this, new TRVRowChangeEvent(((TRVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRVRowDeleting != null)) {
                    this.TRVRowDeleting(this, new TRVRowChangeEvent(((TRVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTRVRow(TRVRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TRV ds = new DS_TRV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRVDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CLIENTDataTable : global::System.Data.TypedTableBase<CLIENTRow> {
            
            private global::System.Data.DataColumn columnCODE_CLIENT;
            
            private global::System.Data.DataColumn columnRS_CLIENT;
            
            private global::System.Data.DataColumn columnREF_CLIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTDataTable() {
                this.TableName = "CLIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CLIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_CLIENTColumn {
                get {
                    return this.columnCODE_CLIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RS_CLIENTColumn {
                get {
                    return this.columnRS_CLIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REF_CLIENTColumn {
                get {
                    return this.columnREF_CLIENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTRow this[int index] {
                get {
                    return ((CLIENTRow)(this.Rows[index]));
                }
            }
            
            public event CLIENTRowChangeEventHandler CLIENTRowChanging;
            
            public event CLIENTRowChangeEventHandler CLIENTRowChanged;
            
            public event CLIENTRowChangeEventHandler CLIENTRowDeleting;
            
            public event CLIENTRowChangeEventHandler CLIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCLIENTRow(CLIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTRow AddCLIENTRow(decimal CODE_CLIENT, string RS_CLIENT, string REF_CLIENT) {
                CLIENTRow rowCLIENTRow = ((CLIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODE_CLIENT,
                        RS_CLIENT,
                        REF_CLIENT};
                rowCLIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCLIENTRow);
                return rowCLIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CLIENTDataTable cln = ((CLIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CLIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCODE_CLIENT = base.Columns["CODE_CLIENT"];
                this.columnRS_CLIENT = base.Columns["RS_CLIENT"];
                this.columnREF_CLIENT = base.Columns["REF_CLIENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCODE_CLIENT = new global::System.Data.DataColumn("CODE_CLIENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_CLIENT);
                this.columnRS_CLIENT = new global::System.Data.DataColumn("RS_CLIENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRS_CLIENT);
                this.columnREF_CLIENT = new global::System.Data.DataColumn("REF_CLIENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF_CLIENT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTRow NewCLIENTRow() {
                return ((CLIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CLIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CLIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CLIENTRowChanged != null)) {
                    this.CLIENTRowChanged(this, new CLIENTRowChangeEvent(((CLIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CLIENTRowChanging != null)) {
                    this.CLIENTRowChanging(this, new CLIENTRowChangeEvent(((CLIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CLIENTRowDeleted != null)) {
                    this.CLIENTRowDeleted(this, new CLIENTRowChangeEvent(((CLIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CLIENTRowDeleting != null)) {
                    this.CLIENTRowDeleting(this, new CLIENTRowChangeEvent(((CLIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCLIENTRow(CLIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS_TRV ds = new DS_TRV();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CLIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UNITERow : global::System.Data.DataRow {
            
            private UNITEDataTable tableUNITE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UNITERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUNITE = ((UNITEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_UNITE {
                get {
                    return ((decimal)(this[this.tableUNITE.CODE_UNITEColumn]));
                }
                set {
                    this[this.tableUNITE.CODE_UNITEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LIB_UNITE {
                get {
                    try {
                        return ((string)(this[this.tableUNITE.LIB_UNITEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIB_UNITE\' in table \'UNITE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUNITE.LIB_UNITEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIB_UNITENull() {
                return this.IsNull(this.tableUNITE.LIB_UNITEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIB_UNITENull() {
                this[this.tableUNITE.LIB_UNITEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ARTICLERow : global::System.Data.DataRow {
            
            private ARTICLEDataTable tableARTICLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ARTICLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableARTICLE = ((ARTICLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_ARTICLE {
                get {
                    return ((decimal)(this[this.tableARTICLE.CODE_ARTICLEColumn]));
                }
                set {
                    this[this.tableARTICLE.CODE_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_ARTICLE {
                get {
                    if (this.IsREF_ARTICLENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableARTICLE.REF_ARTICLEColumn]));
                    }
                }
                set {
                    this[this.tableARTICLE.REF_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESIGNATION_ARTICLE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.DESIGNATION_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESIGNATION_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.DESIGNATION_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_MARQUE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.CODE_MARQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_MARQUE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_MARQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION_ARTICLE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.DESCRIPTION_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.DESCRIPTION_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODE_BARRE_ARTICLE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.CODE_BARRE_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_BARRE_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_BARRE_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QTE_ARTICLE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.QTE_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTE_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.QTE_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_UNITE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.CODE_UNITEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_UNITE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_UNITEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QTE_MIN_ARTICLE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.QTE_MIN_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTE_MIN_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.QTE_MIN_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] PHOTO_ARTICLE {
                get {
                    try {
                        return ((byte[])(this[this.tableARTICLE.PHOTO_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHOTO_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.PHOTO_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRIX_HT_A_ARTICLE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.PRIX_HT_A_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIX_HT_A_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.PRIX_HT_A_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TAUX_MAJORATION {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.TAUX_MAJORATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAUX_MAJORATION\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.TAUX_MAJORATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_TVA {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.CODE_TVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_TVA\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_TVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ETAT_ARTICLE {
                get {
                    try {
                        return ((bool)(this[this.tableARTICLE.ETAT_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETAT_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.ETAT_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_FAMILLE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.CODE_FAMILLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_FAMILLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_FAMILLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_CATEG {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.CODE_CATEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_CATEG\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_CATEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_MAG {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.CODE_MAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_MAG\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_MAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_FOURNISSEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.CODE_FOURNISSEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_FOURNISSEUR\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_FOURNISSEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAX_REMISE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.MAX_REMISEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MAX_REMISE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.MAX_REMISEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRIX_SOLDE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.PRIX_SOLDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIX_SOLDE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.PRIX_SOLDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODE_BARRE_ARTICLE_SOLDE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.CODE_BARRE_ARTICLE_SOLDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_BARRE_ARTICLE_SOLDE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.CODE_BARRE_ARTICLE_SOLDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRIX_HT_V_ARTICLE {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.PRIX_HT_V_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIX_HT_V_ARTICLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.PRIX_HT_V_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_FAMILLE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.REF_FAMILLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_FAMILLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.REF_FAMILLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESIGNATION_FAMILLE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.DESIGNATION_FAMILLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESIGNATION_FAMILLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.DESIGNATION_FAMILLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION_FAMILLE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.DESCRIPTION_FAMILLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION_FAMILLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.DESCRIPTION_FAMILLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LIB_CATEG {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.LIB_CATEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIB_CATEG\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.LIB_CATEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION_CATEG {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.DESCRIPTION_CATEGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION_CATEG\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.DESCRIPTION_CATEGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_MARQUE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.REF_MARQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_MARQUE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.REF_MARQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESIGNATION_MARQUE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.DESIGNATION_MARQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESIGNATION_MARQUE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.DESIGNATION_MARQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DESCRIPTION_MARQUE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.DESCRIPTION_MARQUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCRIPTION_MARQUE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.DESCRIPTION_MARQUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LIB_UNITE {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.LIB_UNITEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LIB_UNITE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.LIB_UNITEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_FOURNISSEUR {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.REF_FOURNISSEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_FOURNISSEUR\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.REF_FOURNISSEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RS_FOURNISSEUR {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.RS_FOURNISSEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RS_FOURNISSEUR\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.RS_FOURNISSEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADRESSE_FOURNISSEUR {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.ADRESSE_FOURNISSEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADRESSE_FOURNISSEUR\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.ADRESSE_FOURNISSEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL_FOURNISSEUR {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.TEL_FOURNISSEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEL_FOURNISSEUR\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.TEL_FOURNISSEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TAUX_TVA {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.TAUX_TVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAUX_TVA\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.TAUX_TVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NOM_MAG {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.NOM_MAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOM_MAG\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.NOM_MAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADRESSE_MAG {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.ADRESSE_MAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADRESSE_MAG\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.ADRESSE_MAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TEL_MAG {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.TEL_MAGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEL_MAG\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.TEL_MAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_FRN {
                get {
                    try {
                        return ((string)(this[this.tableARTICLE.REF_FRNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_FRN\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.REF_FRNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool STOCKABLE {
                get {
                    try {
                        return ((bool)(this[this.tableARTICLE.STOCKABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCKABLE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.STOCKABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PRIX_FIXE {
                get {
                    try {
                        return ((bool)(this[this.tableARTICLE.PRIX_FIXEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIX_FIXE\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.PRIX_FIXEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRIX_TTC {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.PRIX_TTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PRIX_TTC\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.PRIX_TTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TVA_ACHAT {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.TVA_ACHATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TVA_ACHAT\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.TVA_ACHATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TAUX_TVA_ACHAT {
                get {
                    try {
                        return ((decimal)(this[this.tableARTICLE.TAUX_TVA_ACHATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAUX_TVA_ACHAT\' in table \'ARTICLE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableARTICLE.TAUX_TVA_ACHATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.REF_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_ARTICLENull() {
                this[this.tableARTICLE.REF_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESIGNATION_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.DESIGNATION_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESIGNATION_ARTICLENull() {
                this[this.tableARTICLE.DESIGNATION_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_MARQUENull() {
                return this.IsNull(this.tableARTICLE.CODE_MARQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_MARQUENull() {
                this[this.tableARTICLE.CODE_MARQUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTION_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.DESCRIPTION_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTION_ARTICLENull() {
                this[this.tableARTICLE.DESCRIPTION_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_BARRE_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.CODE_BARRE_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_BARRE_ARTICLENull() {
                this[this.tableARTICLE.CODE_BARRE_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTE_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.QTE_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTE_ARTICLENull() {
                this[this.tableARTICLE.QTE_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_UNITENull() {
                return this.IsNull(this.tableARTICLE.CODE_UNITEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_UNITENull() {
                this[this.tableARTICLE.CODE_UNITEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTE_MIN_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.QTE_MIN_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTE_MIN_ARTICLENull() {
                this[this.tableARTICLE.QTE_MIN_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHOTO_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.PHOTO_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHOTO_ARTICLENull() {
                this[this.tableARTICLE.PHOTO_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRIX_HT_A_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.PRIX_HT_A_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRIX_HT_A_ARTICLENull() {
                this[this.tableARTICLE.PRIX_HT_A_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAUX_MAJORATIONNull() {
                return this.IsNull(this.tableARTICLE.TAUX_MAJORATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAUX_MAJORATIONNull() {
                this[this.tableARTICLE.TAUX_MAJORATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_TVANull() {
                return this.IsNull(this.tableARTICLE.CODE_TVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_TVANull() {
                this[this.tableARTICLE.CODE_TVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETAT_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.ETAT_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETAT_ARTICLENull() {
                this[this.tableARTICLE.ETAT_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_FAMILLENull() {
                return this.IsNull(this.tableARTICLE.CODE_FAMILLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_FAMILLENull() {
                this[this.tableARTICLE.CODE_FAMILLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_CATEGNull() {
                return this.IsNull(this.tableARTICLE.CODE_CATEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_CATEGNull() {
                this[this.tableARTICLE.CODE_CATEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_MAGNull() {
                return this.IsNull(this.tableARTICLE.CODE_MAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_MAGNull() {
                this[this.tableARTICLE.CODE_MAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_FOURNISSEURNull() {
                return this.IsNull(this.tableARTICLE.CODE_FOURNISSEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_FOURNISSEURNull() {
                this[this.tableARTICLE.CODE_FOURNISSEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAX_REMISENull() {
                return this.IsNull(this.tableARTICLE.MAX_REMISEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAX_REMISENull() {
                this[this.tableARTICLE.MAX_REMISEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRIX_SOLDENull() {
                return this.IsNull(this.tableARTICLE.PRIX_SOLDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRIX_SOLDENull() {
                this[this.tableARTICLE.PRIX_SOLDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_BARRE_ARTICLE_SOLDENull() {
                return this.IsNull(this.tableARTICLE.CODE_BARRE_ARTICLE_SOLDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_BARRE_ARTICLE_SOLDENull() {
                this[this.tableARTICLE.CODE_BARRE_ARTICLE_SOLDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRIX_HT_V_ARTICLENull() {
                return this.IsNull(this.tableARTICLE.PRIX_HT_V_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRIX_HT_V_ARTICLENull() {
                this[this.tableARTICLE.PRIX_HT_V_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_FAMILLENull() {
                return this.IsNull(this.tableARTICLE.REF_FAMILLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_FAMILLENull() {
                this[this.tableARTICLE.REF_FAMILLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESIGNATION_FAMILLENull() {
                return this.IsNull(this.tableARTICLE.DESIGNATION_FAMILLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESIGNATION_FAMILLENull() {
                this[this.tableARTICLE.DESIGNATION_FAMILLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTION_FAMILLENull() {
                return this.IsNull(this.tableARTICLE.DESCRIPTION_FAMILLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTION_FAMILLENull() {
                this[this.tableARTICLE.DESCRIPTION_FAMILLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIB_CATEGNull() {
                return this.IsNull(this.tableARTICLE.LIB_CATEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIB_CATEGNull() {
                this[this.tableARTICLE.LIB_CATEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTION_CATEGNull() {
                return this.IsNull(this.tableARTICLE.DESCRIPTION_CATEGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTION_CATEGNull() {
                this[this.tableARTICLE.DESCRIPTION_CATEGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_MARQUENull() {
                return this.IsNull(this.tableARTICLE.REF_MARQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_MARQUENull() {
                this[this.tableARTICLE.REF_MARQUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESIGNATION_MARQUENull() {
                return this.IsNull(this.tableARTICLE.DESIGNATION_MARQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESIGNATION_MARQUENull() {
                this[this.tableARTICLE.DESIGNATION_MARQUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESCRIPTION_MARQUENull() {
                return this.IsNull(this.tableARTICLE.DESCRIPTION_MARQUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESCRIPTION_MARQUENull() {
                this[this.tableARTICLE.DESCRIPTION_MARQUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIB_UNITENull() {
                return this.IsNull(this.tableARTICLE.LIB_UNITEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIB_UNITENull() {
                this[this.tableARTICLE.LIB_UNITEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_FOURNISSEURNull() {
                return this.IsNull(this.tableARTICLE.REF_FOURNISSEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_FOURNISSEURNull() {
                this[this.tableARTICLE.REF_FOURNISSEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRS_FOURNISSEURNull() {
                return this.IsNull(this.tableARTICLE.RS_FOURNISSEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRS_FOURNISSEURNull() {
                this[this.tableARTICLE.RS_FOURNISSEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADRESSE_FOURNISSEURNull() {
                return this.IsNull(this.tableARTICLE.ADRESSE_FOURNISSEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADRESSE_FOURNISSEURNull() {
                this[this.tableARTICLE.ADRESSE_FOURNISSEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEL_FOURNISSEURNull() {
                return this.IsNull(this.tableARTICLE.TEL_FOURNISSEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEL_FOURNISSEURNull() {
                this[this.tableARTICLE.TEL_FOURNISSEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAUX_TVANull() {
                return this.IsNull(this.tableARTICLE.TAUX_TVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAUX_TVANull() {
                this[this.tableARTICLE.TAUX_TVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNOM_MAGNull() {
                return this.IsNull(this.tableARTICLE.NOM_MAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNOM_MAGNull() {
                this[this.tableARTICLE.NOM_MAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADRESSE_MAGNull() {
                return this.IsNull(this.tableARTICLE.ADRESSE_MAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADRESSE_MAGNull() {
                this[this.tableARTICLE.ADRESSE_MAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEL_MAGNull() {
                return this.IsNull(this.tableARTICLE.TEL_MAGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEL_MAGNull() {
                this[this.tableARTICLE.TEL_MAGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_FRNNull() {
                return this.IsNull(this.tableARTICLE.REF_FRNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_FRNNull() {
                this[this.tableARTICLE.REF_FRNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOCKABLENull() {
                return this.IsNull(this.tableARTICLE.STOCKABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOCKABLENull() {
                this[this.tableARTICLE.STOCKABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRIX_FIXENull() {
                return this.IsNull(this.tableARTICLE.PRIX_FIXEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRIX_FIXENull() {
                this[this.tableARTICLE.PRIX_FIXEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRIX_TTCNull() {
                return this.IsNull(this.tableARTICLE.PRIX_TTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRIX_TTCNull() {
                this[this.tableARTICLE.PRIX_TTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTVA_ACHATNull() {
                return this.IsNull(this.tableARTICLE.TVA_ACHATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTVA_ACHATNull() {
                this[this.tableARTICLE.TVA_ACHATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAUX_TVA_ACHATNull() {
                return this.IsNull(this.tableARTICLE.TAUX_TVA_ACHATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAUX_TVA_ACHATNull() {
                this[this.tableARTICLE.TAUX_TVA_ACHATColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TRVRow : global::System.Data.DataRow {
            
            private TRVDataTable tableTRV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRVRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRV = ((TRVDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_ID {
                get {
                    return ((decimal)(this[this.tableTRV.TRV_IDColumn]));
                }
                set {
                    this[this.tableTRV.TRV_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRV_LIBELLE {
                get {
                    try {
                        return ((string)(this[this.tableTRV.TRV_LIBELLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_LIBELLE\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_LIBELLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_CODE_ARTICLE {
                get {
                    try {
                        return ((decimal)(this[this.tableTRV.TRV_CODE_ARTICLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_CODE_ARTICLE\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_CODE_ARTICLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_CODE_CLIENT {
                get {
                    try {
                        return ((decimal)(this[this.tableTRV.TRV_CODE_CLIENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_CODE_CLIENT\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_CODE_CLIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_CODE_UNITE {
                get {
                    try {
                        return ((decimal)(this[this.tableTRV.TRV_CODE_UNITEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_CODE_UNITE\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_CODE_UNITEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_PRIX_HT {
                get {
                    try {
                        return ((decimal)(this[this.tableTRV.TRV_PRIX_HTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_PRIX_HT\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_PRIX_HTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_TX_REMISE {
                get {
                    try {
                        return ((decimal)(this[this.tableTRV.TRV_TX_REMISEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_TX_REMISE\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_TX_REMISEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRV_DEBUT_VALID {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRV.TRV_DEBUT_VALIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_DEBUT_VALID\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_DEBUT_VALIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRV_FIN_VALID {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRV.TRV_FIN_VALIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_FIN_VALID\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_FIN_VALIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRV_DATE_CREATION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRV.TRV_DATE_CREATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_DATE_CREATION\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_DATE_CREATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_CREATEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableTRV.TRV_CREATEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_CREATEUR\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_CREATEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRV_DATE_MODIF {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRV.TRV_DATE_MODIFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_DATE_MODIF\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_DATE_MODIFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRV_MODIFICATEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableTRV.TRV_MODIFICATEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRV_MODIFICATEUR\' in table \'TRV\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRV.TRV_MODIFICATEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_LIBELLENull() {
                return this.IsNull(this.tableTRV.TRV_LIBELLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_LIBELLENull() {
                this[this.tableTRV.TRV_LIBELLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_CODE_ARTICLENull() {
                return this.IsNull(this.tableTRV.TRV_CODE_ARTICLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_CODE_ARTICLENull() {
                this[this.tableTRV.TRV_CODE_ARTICLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_CODE_CLIENTNull() {
                return this.IsNull(this.tableTRV.TRV_CODE_CLIENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_CODE_CLIENTNull() {
                this[this.tableTRV.TRV_CODE_CLIENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_CODE_UNITENull() {
                return this.IsNull(this.tableTRV.TRV_CODE_UNITEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_CODE_UNITENull() {
                this[this.tableTRV.TRV_CODE_UNITEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_PRIX_HTNull() {
                return this.IsNull(this.tableTRV.TRV_PRIX_HTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_PRIX_HTNull() {
                this[this.tableTRV.TRV_PRIX_HTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_TX_REMISENull() {
                return this.IsNull(this.tableTRV.TRV_TX_REMISEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_TX_REMISENull() {
                this[this.tableTRV.TRV_TX_REMISEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_DEBUT_VALIDNull() {
                return this.IsNull(this.tableTRV.TRV_DEBUT_VALIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_DEBUT_VALIDNull() {
                this[this.tableTRV.TRV_DEBUT_VALIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_FIN_VALIDNull() {
                return this.IsNull(this.tableTRV.TRV_FIN_VALIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_FIN_VALIDNull() {
                this[this.tableTRV.TRV_FIN_VALIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_DATE_CREATIONNull() {
                return this.IsNull(this.tableTRV.TRV_DATE_CREATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_DATE_CREATIONNull() {
                this[this.tableTRV.TRV_DATE_CREATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_CREATEURNull() {
                return this.IsNull(this.tableTRV.TRV_CREATEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_CREATEURNull() {
                this[this.tableTRV.TRV_CREATEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_DATE_MODIFNull() {
                return this.IsNull(this.tableTRV.TRV_DATE_MODIFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_DATE_MODIFNull() {
                this[this.tableTRV.TRV_DATE_MODIFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRV_MODIFICATEURNull() {
                return this.IsNull(this.tableTRV.TRV_MODIFICATEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRV_MODIFICATEURNull() {
                this[this.tableTRV.TRV_MODIFICATEURColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CLIENTRow : global::System.Data.DataRow {
            
            private CLIENTDataTable tableCLIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CLIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCLIENT = ((CLIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CODE_CLIENT {
                get {
                    try {
                        return ((decimal)(this[this.tableCLIENT.CODE_CLIENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODE_CLIENT\' in table \'CLIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENT.CODE_CLIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RS_CLIENT {
                get {
                    try {
                        return ((string)(this[this.tableCLIENT.RS_CLIENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RS_CLIENT\' in table \'CLIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENT.RS_CLIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REF_CLIENT {
                get {
                    try {
                        return ((string)(this[this.tableCLIENT.REF_CLIENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REF_CLIENT\' in table \'CLIENT\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCLIENT.REF_CLIENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODE_CLIENTNull() {
                return this.IsNull(this.tableCLIENT.CODE_CLIENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODE_CLIENTNull() {
                this[this.tableCLIENT.CODE_CLIENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRS_CLIENTNull() {
                return this.IsNull(this.tableCLIENT.RS_CLIENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRS_CLIENTNull() {
                this[this.tableCLIENT.RS_CLIENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREF_CLIENTNull() {
                return this.IsNull(this.tableCLIENT.REF_CLIENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREF_CLIENTNull() {
                this[this.tableCLIENT.REF_CLIENTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UNITERowChangeEvent : global::System.EventArgs {
            
            private UNITERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITERowChangeEvent(UNITERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UNITERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ARTICLERowChangeEvent : global::System.EventArgs {
            
            private ARTICLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTICLERowChangeEvent(ARTICLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ARTICLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TRVRowChangeEvent : global::System.EventArgs {
            
            private TRVRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRVRowChangeEvent(TRVRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRVRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CLIENTRowChangeEvent : global::System.EventArgs {
            
            private CLIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTRowChangeEvent(CLIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CLIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CHM_CLIENT_APP.CHM_ARTICLES.TARIFICATION_VENTE.DS_TRVTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UNITETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UNITETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UNITE";
            tableMapping.ColumnMappings.Add("CODE_UNITE", "CODE_UNITE");
            tableMapping.ColumnMappings.Add("LIB_UNITE", "LIB_UNITE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CHM_CLIENT_APP.Properties.Settings.Default.GCConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        UNITE.*\r\nFROM            UNITE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DS_TRV.UNITEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DS_TRV.UNITEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DS_TRV.UNITEDataTable dataTable = new DS_TRV.UNITEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ARTICLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ARTICLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ARTICLE";
            tableMapping.ColumnMappings.Add("CODE_ARTICLE", "CODE_ARTICLE");
            tableMapping.ColumnMappings.Add("REF_ARTICLE", "REF_ARTICLE");
            tableMapping.ColumnMappings.Add("DESIGNATION_ARTICLE", "DESIGNATION_ARTICLE");
            tableMapping.ColumnMappings.Add("CODE_MARQUE", "CODE_MARQUE");
            tableMapping.ColumnMappings.Add("DESCRIPTION_ARTICLE", "DESCRIPTION_ARTICLE");
            tableMapping.ColumnMappings.Add("CODE_BARRE_ARTICLE", "CODE_BARRE_ARTICLE");
            tableMapping.ColumnMappings.Add("QTE_ARTICLE", "QTE_ARTICLE");
            tableMapping.ColumnMappings.Add("CODE_UNITE", "CODE_UNITE");
            tableMapping.ColumnMappings.Add("QTE_MIN_ARTICLE", "QTE_MIN_ARTICLE");
            tableMapping.ColumnMappings.Add("PHOTO_ARTICLE", "PHOTO_ARTICLE");
            tableMapping.ColumnMappings.Add("PRIX_HT_A_ARTICLE", "PRIX_HT_A_ARTICLE");
            tableMapping.ColumnMappings.Add("TAUX_MAJORATION", "TAUX_MAJORATION");
            tableMapping.ColumnMappings.Add("CODE_TVA", "CODE_TVA");
            tableMapping.ColumnMappings.Add("ETAT_ARTICLE", "ETAT_ARTICLE");
            tableMapping.ColumnMappings.Add("CODE_FAMILLE", "CODE_FAMILLE");
            tableMapping.ColumnMappings.Add("CODE_CATEG", "CODE_CATEG");
            tableMapping.ColumnMappings.Add("CODE_MAG", "CODE_MAG");
            tableMapping.ColumnMappings.Add("CODE_FOURNISSEUR", "CODE_FOURNISSEUR");
            tableMapping.ColumnMappings.Add("MAX_REMISE", "MAX_REMISE");
            tableMapping.ColumnMappings.Add("PRIX_SOLDE", "PRIX_SOLDE");
            tableMapping.ColumnMappings.Add("CODE_BARRE_ARTICLE_SOLDE", "CODE_BARRE_ARTICLE_SOLDE");
            tableMapping.ColumnMappings.Add("PRIX_HT_V_ARTICLE", "PRIX_HT_V_ARTICLE");
            tableMapping.ColumnMappings.Add("REF_FAMILLE", "REF_FAMILLE");
            tableMapping.ColumnMappings.Add("DESIGNATION_FAMILLE", "DESIGNATION_FAMILLE");
            tableMapping.ColumnMappings.Add("DESCRIPTION_FAMILLE", "DESCRIPTION_FAMILLE");
            tableMapping.ColumnMappings.Add("LIB_CATEG", "LIB_CATEG");
            tableMapping.ColumnMappings.Add("DESCRIPTION_CATEG", "DESCRIPTION_CATEG");
            tableMapping.ColumnMappings.Add("REF_MARQUE", "REF_MARQUE");
            tableMapping.ColumnMappings.Add("DESIGNATION_MARQUE", "DESIGNATION_MARQUE");
            tableMapping.ColumnMappings.Add("DESCRIPTION_MARQUE", "DESCRIPTION_MARQUE");
            tableMapping.ColumnMappings.Add("LIB_UNITE", "LIB_UNITE");
            tableMapping.ColumnMappings.Add("REF_FOURNISSEUR", "REF_FOURNISSEUR");
            tableMapping.ColumnMappings.Add("RS_FOURNISSEUR", "RS_FOURNISSEUR");
            tableMapping.ColumnMappings.Add("ADRESSE_FOURNISSEUR", "ADRESSE_FOURNISSEUR");
            tableMapping.ColumnMappings.Add("TEL_FOURNISSEUR", "TEL_FOURNISSEUR");
            tableMapping.ColumnMappings.Add("TAUX_TVA", "TAUX_TVA");
            tableMapping.ColumnMappings.Add("NOM_MAG", "NOM_MAG");
            tableMapping.ColumnMappings.Add("ADRESSE_MAG", "ADRESSE_MAG");
            tableMapping.ColumnMappings.Add("TEL_MAG", "TEL_MAG");
            tableMapping.ColumnMappings.Add("REF_FRN", "REF_FRN");
            tableMapping.ColumnMappings.Add("STOCKABLE", "STOCKABLE");
            tableMapping.ColumnMappings.Add("PRIX_FIXE", "PRIX_FIXE");
            tableMapping.ColumnMappings.Add("PRIX_TTC", "PRIX_TTC");
            tableMapping.ColumnMappings.Add("TVA_ACHAT", "TVA_ACHAT");
            tableMapping.ColumnMappings.Add("TAUX_TVA_ACHAT", "TAUX_TVA_ACHAT");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CHM_CLIENT_APP.Properties.Settings.Default.GC_ENNEJMAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        CODE_ARTICLE, REF_ARTICLE, DESIGNATION_ARTICLE, CODE_MARQUE, DESCRIPTION_ARTICLE, CODE_BARRE_ARTICLE, QTE_ARTICLE, CODE_UNITE, QTE_MIN_ARTICLE, PHOTO_ARTICLE, 
                         PRIX_HT_A_ARTICLE, TAUX_MAJORATION, CODE_TVA, ETAT_ARTICLE, CODE_FAMILLE, CODE_CATEG, CODE_MAG, CODE_FOURNISSEUR, MAX_REMISE, PRIX_SOLDE, CODE_BARRE_ARTICLE_SOLDE, 
                         PRIX_HT_V_ARTICLE, REF_FAMILLE, DESIGNATION_FAMILLE, DESCRIPTION_FAMILLE, LIB_CATEG, DESCRIPTION_CATEG, REF_MARQUE, DESIGNATION_MARQUE, DESCRIPTION_MARQUE, LIB_UNITE, 
                         REF_FOURNISSEUR, RS_FOURNISSEUR, ADRESSE_FOURNISSEUR, TEL_FOURNISSEUR, TAUX_TVA, NOM_MAG, ADRESSE_MAG, TEL_MAG, REF_FRN, STOCKABLE, PRIX_FIXE, PRIX_TTC, TVA_ACHAT, 
                         TAUX_TVA_ACHAT
FROM            V_ARTICLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Fill() {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[0];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DS_TRV dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DS_TRV dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DS_TRV dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DS_TRV dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591