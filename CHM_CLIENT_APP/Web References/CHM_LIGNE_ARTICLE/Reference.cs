//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CHM_CLIENT_APP.CHM_LIGNE_ARTICLE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CHM_LIGNE_ARTICLESoap", Namespace="http://192.168.1.213:10001/")]
    public partial class CHM_LIGNE_ARTICLE : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDateSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getListeLigneArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewRefLigneArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback loadLigneArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertMarqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMarqueOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLigneOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CHM_LIGNE_ARTICLE() {
            this.Url = global::CHM_CLIENT_APP.Properties.Settings.Default.CHM_CLIENT_APP_CHM_LIGNE_ARTICLE_CHM_LIGNE_ARTICLE;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConnectionCompletedEventHandler ConnectionCompleted;
        
        /// <remarks/>
        public event closeCompletedEventHandler closeCompleted;
        
        /// <remarks/>
        public event getDateSCompletedEventHandler getDateSCompleted;
        
        /// <remarks/>
        public event getListeLigneArticleCompletedEventHandler getListeLigneArticleCompleted;
        
        /// <remarks/>
        public event getNewRefLigneArticleCompletedEventHandler getNewRefLigneArticleCompleted;
        
        /// <remarks/>
        public event loadLigneArticleCompletedEventHandler loadLigneArticleCompleted;
        
        /// <remarks/>
        public event insertMarqueCompletedEventHandler insertMarqueCompleted;
        
        /// <remarks/>
        public event updateMarqueCompletedEventHandler updateMarqueCompleted;
        
        /// <remarks/>
        public event deleteLigneCompletedEventHandler deleteLigneCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/Connection", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Connection() {
            this.Invoke("Connection", new object[0]);
        }
        
        /// <remarks/>
        public void ConnectionAsync() {
            this.ConnectionAsync(null);
        }
        
        /// <remarks/>
        public void ConnectionAsync(object userState) {
            if ((this.ConnectionOperationCompleted == null)) {
                this.ConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectionOperationCompleted);
            }
            this.InvokeAsync("Connection", new object[0], this.ConnectionOperationCompleted, userState);
        }
        
        private void OnConnectionOperationCompleted(object arg) {
            if ((this.ConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/close", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void close() {
            this.Invoke("close", new object[0]);
        }
        
        /// <remarks/>
        public void closeAsync() {
            this.closeAsync(null);
        }
        
        /// <remarks/>
        public void closeAsync(object userState) {
            if ((this.closeOperationCompleted == null)) {
                this.closeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseOperationCompleted);
            }
            this.InvokeAsync("close", new object[0], this.closeOperationCompleted, userState);
        }
        
        private void OncloseOperationCompleted(object arg) {
            if ((this.closeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/getDateS", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getDateS() {
            object[] results = this.Invoke("getDateS", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getDateSAsync() {
            this.getDateSAsync(null);
        }
        
        /// <remarks/>
        public void getDateSAsync(object userState) {
            if ((this.getDateSOperationCompleted == null)) {
                this.getDateSOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDateSOperationCompleted);
            }
            this.InvokeAsync("getDateS", new object[0], this.getDateSOperationCompleted, userState);
        }
        
        private void OngetDateSOperationCompleted(object arg) {
            if ((this.getDateSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDateSCompleted(this, new getDateSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/getListeLigneArticle", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getListeLigneArticle() {
            object[] results = this.Invoke("getListeLigneArticle", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getListeLigneArticleAsync() {
            this.getListeLigneArticleAsync(null);
        }
        
        /// <remarks/>
        public void getListeLigneArticleAsync(object userState) {
            if ((this.getListeLigneArticleOperationCompleted == null)) {
                this.getListeLigneArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetListeLigneArticleOperationCompleted);
            }
            this.InvokeAsync("getListeLigneArticle", new object[0], this.getListeLigneArticleOperationCompleted, userState);
        }
        
        private void OngetListeLigneArticleOperationCompleted(object arg) {
            if ((this.getListeLigneArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getListeLigneArticleCompleted(this, new getListeLigneArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/getNewRefLigneArticle", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESULT_QUERY getNewRefLigneArticle() {
            object[] results = this.Invoke("getNewRefLigneArticle", new object[0]);
            return ((RESULT_QUERY)(results[0]));
        }
        
        /// <remarks/>
        public void getNewRefLigneArticleAsync() {
            this.getNewRefLigneArticleAsync(null);
        }
        
        /// <remarks/>
        public void getNewRefLigneArticleAsync(object userState) {
            if ((this.getNewRefLigneArticleOperationCompleted == null)) {
                this.getNewRefLigneArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewRefLigneArticleOperationCompleted);
            }
            this.InvokeAsync("getNewRefLigneArticle", new object[0], this.getNewRefLigneArticleOperationCompleted, userState);
        }
        
        private void OngetNewRefLigneArticleOperationCompleted(object arg) {
            if ((this.getNewRefLigneArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewRefLigneArticleCompleted(this, new getNewRefLigneArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/loadLigneArticle", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable loadLigneArticle(decimal CODE_LIGNE) {
            object[] results = this.Invoke("loadLigneArticle", new object[] {
                        CODE_LIGNE});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void loadLigneArticleAsync(decimal CODE_LIGNE) {
            this.loadLigneArticleAsync(CODE_LIGNE, null);
        }
        
        /// <remarks/>
        public void loadLigneArticleAsync(decimal CODE_LIGNE, object userState) {
            if ((this.loadLigneArticleOperationCompleted == null)) {
                this.loadLigneArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloadLigneArticleOperationCompleted);
            }
            this.InvokeAsync("loadLigneArticle", new object[] {
                        CODE_LIGNE}, this.loadLigneArticleOperationCompleted, userState);
        }
        
        private void OnloadLigneArticleOperationCompleted(object arg) {
            if ((this.loadLigneArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loadLigneArticleCompleted(this, new loadLigneArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/insertMarque", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESULT_QUERY insertMarque(decimal CODE_MARQUE, string REF_LIGNE, string DESIGNATION_LIGNE, string DESCRIPTION_LIGNE) {
            object[] results = this.Invoke("insertMarque", new object[] {
                        CODE_MARQUE,
                        REF_LIGNE,
                        DESIGNATION_LIGNE,
                        DESCRIPTION_LIGNE});
            return ((RESULT_QUERY)(results[0]));
        }
        
        /// <remarks/>
        public void insertMarqueAsync(decimal CODE_MARQUE, string REF_LIGNE, string DESIGNATION_LIGNE, string DESCRIPTION_LIGNE) {
            this.insertMarqueAsync(CODE_MARQUE, REF_LIGNE, DESIGNATION_LIGNE, DESCRIPTION_LIGNE, null);
        }
        
        /// <remarks/>
        public void insertMarqueAsync(decimal CODE_MARQUE, string REF_LIGNE, string DESIGNATION_LIGNE, string DESCRIPTION_LIGNE, object userState) {
            if ((this.insertMarqueOperationCompleted == null)) {
                this.insertMarqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertMarqueOperationCompleted);
            }
            this.InvokeAsync("insertMarque", new object[] {
                        CODE_MARQUE,
                        REF_LIGNE,
                        DESIGNATION_LIGNE,
                        DESCRIPTION_LIGNE}, this.insertMarqueOperationCompleted, userState);
        }
        
        private void OninsertMarqueOperationCompleted(object arg) {
            if ((this.insertMarqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertMarqueCompleted(this, new insertMarqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/updateMarque", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESULT_QUERY updateMarque(decimal CODE_LIGNE, decimal CODE_MARQUE, string DESIGNATION_LIGNE, string DESCRIPTION_LIGNE) {
            object[] results = this.Invoke("updateMarque", new object[] {
                        CODE_LIGNE,
                        CODE_MARQUE,
                        DESIGNATION_LIGNE,
                        DESCRIPTION_LIGNE});
            return ((RESULT_QUERY)(results[0]));
        }
        
        /// <remarks/>
        public void updateMarqueAsync(decimal CODE_LIGNE, decimal CODE_MARQUE, string DESIGNATION_LIGNE, string DESCRIPTION_LIGNE) {
            this.updateMarqueAsync(CODE_LIGNE, CODE_MARQUE, DESIGNATION_LIGNE, DESCRIPTION_LIGNE, null);
        }
        
        /// <remarks/>
        public void updateMarqueAsync(decimal CODE_LIGNE, decimal CODE_MARQUE, string DESIGNATION_LIGNE, string DESCRIPTION_LIGNE, object userState) {
            if ((this.updateMarqueOperationCompleted == null)) {
                this.updateMarqueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMarqueOperationCompleted);
            }
            this.InvokeAsync("updateMarque", new object[] {
                        CODE_LIGNE,
                        CODE_MARQUE,
                        DESIGNATION_LIGNE,
                        DESCRIPTION_LIGNE}, this.updateMarqueOperationCompleted, userState);
        }
        
        private void OnupdateMarqueOperationCompleted(object arg) {
            if ((this.updateMarqueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMarqueCompleted(this, new updateMarqueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://192.168.1.213:10001/deleteLigne", RequestNamespace="http://192.168.1.213:10001/", ResponseNamespace="http://192.168.1.213:10001/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RESULT_QUERY deleteLigne(decimal CODE_LIGNE) {
            object[] results = this.Invoke("deleteLigne", new object[] {
                        CODE_LIGNE});
            return ((RESULT_QUERY)(results[0]));
        }
        
        /// <remarks/>
        public void deleteLigneAsync(decimal CODE_LIGNE) {
            this.deleteLigneAsync(CODE_LIGNE, null);
        }
        
        /// <remarks/>
        public void deleteLigneAsync(decimal CODE_LIGNE, object userState) {
            if ((this.deleteLigneOperationCompleted == null)) {
                this.deleteLigneOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLigneOperationCompleted);
            }
            this.InvokeAsync("deleteLigne", new object[] {
                        CODE_LIGNE}, this.deleteLigneOperationCompleted, userState);
        }
        
        private void OndeleteLigneOperationCompleted(object arg) {
            if ((this.deleteLigneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLigneCompleted(this, new deleteLigneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://192.168.1.213:10001/")]
    public partial class RESULT_QUERY {
        
        private string cODEField;
        
        private bool okField;
        
        private string mESSAGEField;
        
        /// <remarks/>
        public string CODE {
            get {
                return this.cODEField;
            }
            set {
                this.cODEField = value;
            }
        }
        
        /// <remarks/>
        public bool OK {
            get {
                return this.okField;
            }
            set {
                this.okField = value;
            }
        }
        
        /// <remarks/>
        public string MESSAGE {
            get {
                return this.mESSAGEField;
            }
            set {
                this.mESSAGEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ConnectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void closeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getDateSCompletedEventHandler(object sender, getDateSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDateSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDateSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getListeLigneArticleCompletedEventHandler(object sender, getListeLigneArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getListeLigneArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getListeLigneArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getNewRefLigneArticleCompletedEventHandler(object sender, getNewRefLigneArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewRefLigneArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewRefLigneArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESULT_QUERY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESULT_QUERY)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void loadLigneArticleCompletedEventHandler(object sender, loadLigneArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loadLigneArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loadLigneArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void insertMarqueCompletedEventHandler(object sender, insertMarqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertMarqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertMarqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESULT_QUERY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESULT_QUERY)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void updateMarqueCompletedEventHandler(object sender, updateMarqueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMarqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMarqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESULT_QUERY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESULT_QUERY)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void deleteLigneCompletedEventHandler(object sender, deleteLigneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteLigneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteLigneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RESULT_QUERY Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RESULT_QUERY)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591